#! /usr/bin/python3

import json
import sys
import cgitb
import os
import MySQLdb
import passwords
import boto3

cgitb.enable()

conn = MySQLdb.connect(host=passwords.SQL_HOST, user=passwords.SQL_USER, passwd=passwords.SQL_PASS, db="servers")
cursor = conn.cursor()

def main():
    if "PATH_INFO" not in os.environ or os.environ["PATH_INFO"] == "/":
        print("Status: 200 OK")
        print("Content-Type: text/html")
        print()
    else:
        if os.environ["REQUEST_METHOD"] == "GET" and \
                os.environ["PATH_INFO"] == "/servers":
            get()

        elif os.environ["REQUEST_METHOD"] == "GET" and \
                "/servers" in os.environ["PATH_INFO"] and \
                len(os.environ["PATH_INFO"].split("/")) == 3:
            get_id()
        else: 
            code_404()

def get():
    ret_arr = []
    cursor.execute("SELECT * FROM server")
    data = cursor.fetchall()
    conn.commit()
    conn.close()
    ec2_r = boto3.resource("ec2")
    
    if len(data) == 0:
        code_404()

    else:
        for i in data:
            if i[4] == 1:
                inst = ec2_r.Instance(i[3])
                tmp = {"id": i[0], "owner": i[1], "description": i[2], "publicIp": inst.public_ip_address}
            else:
                tmp = {"id": i[0], "owner": i[1], "description": i[2], "publicIp": ""}
            ret_arr.append(tmp)
        print("Status: 200 OK")
        print("Content-Type: text/html")
        print()
        print(json.dumps(ret_arr, indent=2))

def get_id():
    ret_arr = []
    key = os.environ["PATH_INFO"].split('/')[2]
    key = int(key)
    cursor.execute("SELECT * FROM server WHERE id=%s" %(key))
    data = cursor.fetchall()
    conn.commit()
    conn.close()
    ec2_r = boto3.resource("ec2")
    
    if len(data) == 0:
        code_404()

    else:
        for i in data:
            if i[4] == 1:
                inst = ec2_r.Instance(i[3])
                tmp = {"id": i[0], "owner": i[1], "description": i[2], "publicIp": inst.public_ip_address}
            else:
                tmp = {"id": i[0], "owner": i[1], "description": i[2], "publicIp": ""}
            ret_arr.append(tmp)
        print("Status: 200 OK")
        print("Content-Type: text/html")
        print()
        print(json.dumps(ret_arr, indent=2))

def code_404():
    print("Status: 404 Not Found")
    print()

def code_400():
    print("Status: 400 Bad Request")
    print()

main()
    

